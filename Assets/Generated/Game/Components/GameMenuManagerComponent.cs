//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity menuManagerEntity { get { return GetGroup(GameMatcher.MenuManager).GetSingleEntity(); } }
    public MenuManagerComponent menuManager { get { return menuManagerEntity.menuManager; } }
    public bool hasMenuManager { get { return menuManagerEntity != null; } }

    public GameEntity SetMenuManager(IMenuManager newValue) {
        if (hasMenuManager) {
            throw new Entitas.EntitasException("Could not set MenuManager!\n" + this + " already has an entity with MenuManagerComponent!",
                "You should check if the context already has a menuManagerEntity before setting it or use context.ReplaceMenuManager().");
        }
        var entity = CreateEntity();
        entity.AddMenuManager(newValue);
        return entity;
    }

    public void ReplaceMenuManager(IMenuManager newValue) {
        var entity = menuManagerEntity;
        if (entity == null) {
            entity = SetMenuManager(newValue);
        } else {
            entity.ReplaceMenuManager(newValue);
        }
    }

    public void RemoveMenuManager() {
        menuManagerEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public MenuManagerComponent menuManager { get { return (MenuManagerComponent)GetComponent(GameComponentsLookup.MenuManager); } }
    public bool hasMenuManager { get { return HasComponent(GameComponentsLookup.MenuManager); } }

    public void AddMenuManager(IMenuManager newValue) {
        var index = GameComponentsLookup.MenuManager;
        var component = (MenuManagerComponent)CreateComponent(index, typeof(MenuManagerComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceMenuManager(IMenuManager newValue) {
        var index = GameComponentsLookup.MenuManager;
        var component = (MenuManagerComponent)CreateComponent(index, typeof(MenuManagerComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveMenuManager() {
        RemoveComponent(GameComponentsLookup.MenuManager);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherMenuManager;

    public static Entitas.IMatcher<GameEntity> MenuManager {
        get {
            if (_matcherMenuManager == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.MenuManager);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherMenuManager = matcher;
            }

            return _matcherMenuManager;
        }
    }
}
