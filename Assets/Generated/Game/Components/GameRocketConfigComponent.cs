//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity rocketConfigEntity { get { return GetGroup(GameMatcher.RocketConfig).GetSingleEntity(); } }
    public RocketConfigComponent rocketConfig { get { return rocketConfigEntity.rocketConfig; } }
    public bool hasRocketConfig { get { return rocketConfigEntity != null; } }

    public GameEntity SetRocketConfig(RocketConfig newValue) {
        if (hasRocketConfig) {
            throw new Entitas.EntitasException("Could not set RocketConfig!\n" + this + " already has an entity with RocketConfigComponent!",
                "You should check if the context already has a rocketConfigEntity before setting it or use context.ReplaceRocketConfig().");
        }
        var entity = CreateEntity();
        entity.AddRocketConfig(newValue);
        return entity;
    }

    public void ReplaceRocketConfig(RocketConfig newValue) {
        var entity = rocketConfigEntity;
        if (entity == null) {
            entity = SetRocketConfig(newValue);
        } else {
            entity.ReplaceRocketConfig(newValue);
        }
    }

    public void RemoveRocketConfig() {
        rocketConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RocketConfigComponent rocketConfig { get { return (RocketConfigComponent)GetComponent(GameComponentsLookup.RocketConfig); } }
    public bool hasRocketConfig { get { return HasComponent(GameComponentsLookup.RocketConfig); } }

    public void AddRocketConfig(RocketConfig newValue) {
        var index = GameComponentsLookup.RocketConfig;
        var component = (RocketConfigComponent)CreateComponent(index, typeof(RocketConfigComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceRocketConfig(RocketConfig newValue) {
        var index = GameComponentsLookup.RocketConfig;
        var component = (RocketConfigComponent)CreateComponent(index, typeof(RocketConfigComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveRocketConfig() {
        RemoveComponent(GameComponentsLookup.RocketConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRocketConfig;

    public static Entitas.IMatcher<GameEntity> RocketConfig {
        get {
            if (_matcherRocketConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.RocketConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRocketConfig = matcher;
            }

            return _matcherRocketConfig;
        }
    }
}
