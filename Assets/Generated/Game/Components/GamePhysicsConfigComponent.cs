//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity physicsConfigEntity { get { return GetGroup(GameMatcher.PhysicsConfig).GetSingleEntity(); } }
    public PhysicsConfigComponent physicsConfig { get { return physicsConfigEntity.physicsConfig; } }
    public bool hasPhysicsConfig { get { return physicsConfigEntity != null; } }

    public GameEntity SetPhysicsConfig(PhysicsConfig newValue) {
        if (hasPhysicsConfig) {
            throw new Entitas.EntitasException("Could not set PhysicsConfig!\n" + this + " already has an entity with PhysicsConfigComponent!",
                "You should check if the context already has a physicsConfigEntity before setting it or use context.ReplacePhysicsConfig().");
        }
        var entity = CreateEntity();
        entity.AddPhysicsConfig(newValue);
        return entity;
    }

    public void ReplacePhysicsConfig(PhysicsConfig newValue) {
        var entity = physicsConfigEntity;
        if (entity == null) {
            entity = SetPhysicsConfig(newValue);
        } else {
            entity.ReplacePhysicsConfig(newValue);
        }
    }

    public void RemovePhysicsConfig() {
        physicsConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PhysicsConfigComponent physicsConfig { get { return (PhysicsConfigComponent)GetComponent(GameComponentsLookup.PhysicsConfig); } }
    public bool hasPhysicsConfig { get { return HasComponent(GameComponentsLookup.PhysicsConfig); } }

    public void AddPhysicsConfig(PhysicsConfig newValue) {
        var index = GameComponentsLookup.PhysicsConfig;
        var component = (PhysicsConfigComponent)CreateComponent(index, typeof(PhysicsConfigComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePhysicsConfig(PhysicsConfig newValue) {
        var index = GameComponentsLookup.PhysicsConfig;
        var component = (PhysicsConfigComponent)CreateComponent(index, typeof(PhysicsConfigComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePhysicsConfig() {
        RemoveComponent(GameComponentsLookup.PhysicsConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPhysicsConfig;

    public static Entitas.IMatcher<GameEntity> PhysicsConfig {
        get {
            if (_matcherPhysicsConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PhysicsConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPhysicsConfig = matcher;
            }

            return _matcherPhysicsConfig;
        }
    }
}
