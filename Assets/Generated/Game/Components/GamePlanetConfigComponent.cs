//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity planetConfigEntity { get { return GetGroup(GameMatcher.PlanetConfig).GetSingleEntity(); } }
    public PlanetConfigComponent planetConfig { get { return planetConfigEntity.planetConfig; } }
    public bool hasPlanetConfig { get { return planetConfigEntity != null; } }

    public GameEntity SetPlanetConfig(PlanetConfig newValue) {
        if (hasPlanetConfig) {
            throw new Entitas.EntitasException("Could not set PlanetConfig!\n" + this + " already has an entity with PlanetConfigComponent!",
                "You should check if the context already has a planetConfigEntity before setting it or use context.ReplacePlanetConfig().");
        }
        var entity = CreateEntity();
        entity.AddPlanetConfig(newValue);
        return entity;
    }

    public void ReplacePlanetConfig(PlanetConfig newValue) {
        var entity = planetConfigEntity;
        if (entity == null) {
            entity = SetPlanetConfig(newValue);
        } else {
            entity.ReplacePlanetConfig(newValue);
        }
    }

    public void RemovePlanetConfig() {
        planetConfigEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlanetConfigComponent planetConfig { get { return (PlanetConfigComponent)GetComponent(GameComponentsLookup.PlanetConfig); } }
    public bool hasPlanetConfig { get { return HasComponent(GameComponentsLookup.PlanetConfig); } }

    public void AddPlanetConfig(PlanetConfig newValue) {
        var index = GameComponentsLookup.PlanetConfig;
        var component = (PlanetConfigComponent)CreateComponent(index, typeof(PlanetConfigComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePlanetConfig(PlanetConfig newValue) {
        var index = GameComponentsLookup.PlanetConfig;
        var component = (PlanetConfigComponent)CreateComponent(index, typeof(PlanetConfigComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePlanetConfig() {
        RemoveComponent(GameComponentsLookup.PlanetConfig);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlanetConfig;

    public static Entitas.IMatcher<GameEntity> PlanetConfig {
        get {
            if (_matcherPlanetConfig == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlanetConfig);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlanetConfig = matcher;
            }

            return _matcherPlanetConfig;
        }
    }
}
